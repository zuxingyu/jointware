apiVersion: v1
kind: Template
labels:
  template: s2i-karaf2-cxf-rest
metadata:
  annotations:
    description: REST example using CXF in Karaf container.
    iconClass: icon-jboss
    tags: quickstart,java,karaf,fis
    version: "2.0"
  creationTimestamp: 2017-12-27T03:03:29Z
  name: s2i-karaf2-cxf-rest
  namespace: openshift
  resourceVersion: "1053"
  selfLink: /oapi/v1/namespaces/openshift/templates/s2i-karaf2-cxf-rest
  uid: 8401806f-eab2-11e7-8531-0050569c0b78
objects:
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      component: ${APP_NAME}
      container: java
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${SERVICE_NAME}-route
  spec:
    to:
      kind: Service
      name: ${SERVICE_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations: {}
    labels:
      component: ${APP_NAME}
      container: karaf
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${SERVICE_NAME}
  spec:
    clusterIP: None
    deprecatedPublicIPs: []
    ports:
    - port: 9412
      protocol: TCP
      targetPort: 8181
    selector:
      component: ${APP_NAME}
      container: karaf
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      component: ${APP_NAME}
      container: karaf
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec: {}
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      component: ${APP_NAME}
      container: karaf
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    resources: {}
    source:
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: BUILD_LOGLEVEL
          value: "5"
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        - name: MAVEN_ARGS
          value: ${MAVEN_ARGS}
        - name: MAVEN_ARGS_APPEND
          value: ${MAVEN_ARGS_APPEND}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: fis-karaf-openshift:${BUILDER_VERSION}
          namespace: ${IMAGE_STREAM_NAMESPACE}
        incremental: true
      type: Source
    triggers:
    - github:
        secret: ${BUILD_SECRET}
      type: GitHub
    - generic:
        secret: ${BUILD_SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    labels:
      component: ${APP_NAME}
      container: karaf
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      component: ${APP_NAME}
      container: karaf
      deploymentconfig: ${APP_NAME}
      group: quickstarts
      project: ${APP_NAME}
      provider: s2i
      version: ${APP_VERSION}
    strategy:
      resources: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: ${APP_NAME}
          container: karaf
          deploymentconfig: ${APP_NAME}
          group: quickstarts
          project: ${APP_NAME}
          provider: s2i
          version: ${APP_VERSION}
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          image: library/${APP_NAME}:latest
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8181
            initialDelaySeconds: 180
          name: ${APP_NAME}
          ports:
          - containerPort: 8181
            name: http
          - containerPort: 8778
            name: jolokia
          readinessProbe:
            httpGet:
              path: /readiness-check
              port: 8181
            initialDelaySeconds: 10
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
  status: {}
parameters:
- description: The name assigned to the application.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: s2i-karaf2-cxf-rest
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: GIT_REPO
  required: true
  value: https://github.com/fabric8-quickstarts/karaf2-cxf-rest.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: GIT_REF
  value: karaf2-cxf-rest-1.0.0.redhat-000010
- description: Exposed Service name.
  displayName: Service Name
  name: SERVICE_NAME
  value: s2i-karaf2-cxf-rest
- description: The version of the FIS S2I builder image to use.
  displayName: Builder version
  name: BUILDER_VERSION
  value: "2.0"
- description: The application version.
  displayName: Application Version
  name: APP_VERSION
  value: 1.0.0.redhat-000010
- description: Arguments passed to mvn in the build.
  displayName: Maven Arguments
  name: MAVEN_ARGS
  value: install -DskipTests -Dfabric8.skip -e -B
- description: Extra arguments passed to mvn, e.g. for multi-module builds.
  displayName: Extra Maven Arguments
  name: MAVEN_ARGS_APPEND
- description: Directory of the artifact to be built, e.g. for multi-module builds.
  displayName: Maven build directory
  name: ARTIFACT_DIR
- description: Namespace in which the Fuse ImageStreams are installed. These ImageStreams
    are normally installed in the openshift namespace. You should only need to modify
    this if you've installed the ImageStreams in a different namespace/project.
  displayName: Image Stream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: The amount of CPU to requests.
  displayName: CPU request
  name: CPU_REQUEST
  required: true
  value: "0.2"
- description: The amount of memory required for the container to run.
  displayName: Memory request
  name: MEMORY_REQUEST
  required: true
  value: 1.5G
- description: The amount of CPU the container is limited to use.
  displayName: CPU limit
  name: CPU_LIMIT
  required: true
  value: "1.0"
- description: The amount of memory the container is limited to use.
  displayName: Memory limit
  name: MEMORY_LIMIT
  required: true
  value: 2G
