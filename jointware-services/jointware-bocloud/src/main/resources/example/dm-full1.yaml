apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: xyj-dm
  namespace: default
  labels:
    app: xyj-dm
spec:
  replicas: 2
  selector:
    matchLabels:
      app: xyj-dm
  template:
    metadata:
      name: xyj-dm
      labels:
        app: xyj-dm
    spec:
      containers:
      - image: dcr.io:5000/busybox:latest
        name: xyj-dm
        resources:
          requests:
            cpu: 0.2
            memory: 256Mi
          limits:
            cpu: 0.5
            memory: 512Mi
        livenessProbe: #pod内容器健康检查的设置，详情请见http://blog.csdn.net/liyingke112/article/details/77531584
          httpGet: #通过httpget检查健康，返回200-399之间，则认为容器正常
            path: / #URI地址
            port: 80
                #host: 127.0.0.1 #主机地址
            scheme: HTTP
          initialDelaySeconds: 180 #表明第一次检测在容器启动后多长时间后开始
          timeoutSeconds: 5 #检测的超时时间
          periodSeconds: 15  #检查间隔时间
          successThreshold: 1
          failureThreshold: 1
        readinessProbe:
          httpGet: #通过httpget检查健康，返回200-399之间，则认为容器正常
            path: / #URI地址
            port: 80
                          #host: 127.0.0.1 #主机地址
            scheme: HTTP
          initialDelaySeconds: 180 #表明第一次检测在容器启动后多长时间后开始
          timeoutSeconds: 5 #检测的超时时间
          periodSeconds: 15  #检查间隔时间
        volumeMounts:  #详情请见http://blog.csdn.net/liyingke112/article/details/76577520
        - name: volume #挂载设备的名字，与volumes[*].name 需要对应
          mountPath: /opt
        command:
          - sleep
          - "3600"
        env:
        - name: JAVA_HOME
          value: "/opt"
        - name: TOMCAT_HOME
          value: "/usr"
        ports:
        - containerPort: 8080
          name: tomcat
          protocol: TCP
        - containerPort: 80
          name: httpd
          protocol: TCP
        imagePullPolicy: IfNotPresent
      volumes: #定义一组挂载设备
        - name: volume #定义一个挂载设备的名字
          #meptyDir: {}
          hostPath:
            path: /opt #挂载设备类型为hostPath，路径为宿主机下的/opt,这里设备类型支持很多种