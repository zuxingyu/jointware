apiVersion: v1
kind: Template
labels:
  template: decisionserver63-https-s2i
  xpaas: 1.4.0
message: A new BRMS application with SSL support has been created in your project.
  The username/password for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.
  Please be sure to create the "decisionserver-service-account" service account and
  the secret named "${HTTPS_SECRET}" containing the ${HTTPS_KEYSTORE} file used for
  serving secure content.
metadata:
  annotations:
    description: Application template for Red Hat JBoss BRMS 6.3 decision server HTTPS
      applications built using S2I.
    iconClass: icon-jboss
    openshift.io/display-name: Red Hat JBoss BRMS 6.3 decision server (with https)
    tags: decisionserver,jboss,xpaas
    version: 1.4.0
  creationTimestamp: 2017-12-27T03:03:28Z
  name: decisionserver63-https-s2i
  namespace: openshift
  resourceVersion: "990"
  selfLink: /oapi/v1/namespaces/openshift/templates/decisionserver63-https-s2i
  uid: 836743cb-eab2-11e7-8531-0050569c0b78
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's https port.
    labels:
      application: ${APPLICATION_NAME}
    name: secure-${APPLICATION_NAME}
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-https
  kind: Route
  metadata:
    annotations:
      description: Route for application's https service.
    labels:
      application: ${APPLICATION_NAME}
    name: secure-${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTPS}
    tls:
      termination: passthrough
    to:
      name: secure-${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: KIE_CONTAINER_DEPLOYMENT
          value: ${KIE_CONTAINER_DEPLOYMENT}
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-decisionserver63-openshift:1.4
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: KIE_CONTAINER_DEPLOYMENT
            value: ${KIE_CONTAINER_DEPLOYMENT}
          - name: KIE_SERVER_PROTOCOL
            value: ${KIE_SERVER_PROTOCOL}
          - name: KIE_SERVER_PORT
            value: ${KIE_SERVER_PORT}
          - name: KIE_SERVER_USER
            value: ${KIE_SERVER_USER}
          - name: KIE_SERVER_PASSWORD
            value: ${KIE_SERVER_PASSWORD}
          - name: HTTPS_KEYSTORE_DIR
            value: /etc/decisionserver-secret-volume
          - name: HTTPS_KEYSTORE
            value: ${HTTPS_KEYSTORE}
          - name: HTTPS_NAME
            value: ${HTTPS_NAME}
          - name: HTTPS_PASSWORD
            value: ${HTTPS_PASSWORD}
          - name: HORNETQ_CLUSTER_PASSWORD
            value: ${HORNETQ_CLUSTER_PASSWORD}
          - name: HORNETQ_QUEUES
            value: ${HORNETQ_QUEUES}
          - name: HORNETQ_TOPICS
            value: ${HORNETQ_TOPICS}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
          volumeMounts:
          - mountPath: /etc/decisionserver-secret-volume
            name: decisionserver-keystore-volume
            readOnly: true
        serviceAccountName: decisionserver-service-account
        terminationGracePeriodSeconds: 60
        volumes:
        - name: decisionserver-keystore-volume
          secret:
            secretName: ${HTTPS_SECRET}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStream
          name: ${APPLICATION_NAME}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: 'The KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2'
  displayName: KIE Container Deployment
  name: KIE_CONTAINER_DEPLOYMENT
  value: decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final
- description: The protocol to access the KIE Server REST interface.
  displayName: KIE Server Protocol
  name: KIE_SERVER_PROTOCOL
  value: https
- description: The port to access the KIE Server REST interface.
  displayName: KIE Server Port
  name: KIE_SERVER_PORT
  value: "8443"
- description: The user name to access the KIE Server REST or JMS interface.
  displayName: KIE Server Username
  name: KIE_SERVER_USER
  value: kieserver
- description: The password to access the KIE Server REST or JMS interface. Must be
    different than username; must not be root, admin, or administrator; must contain
    at least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
    symbol(s).
  displayName: KIE Server Password
  from: '[a-zA-Z]{6}[0-9]{1}!'
  generate: expression
  name: KIE_SERVER_PASSWORD
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: kie-app
- description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname
  name: HOSTNAME_HTTP
- description: 'Custom hostname for https service route.  Leave blank for default
    hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'
  displayName: Custom https Route Hostname
  name: HOSTNAME_HTTPS
- description: Git source URI for application
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/jboss-openshift/openshift-quickstarts.git
- description: Git branch/tag reference
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
  value: "1.3"
- description: Path within Git project to build; empty for root project directory.
  displayName: Context Directory
  name: CONTEXT_DIR
  value: decisionserver/hellorules
- description: Queue names
  displayName: Queues
  name: HORNETQ_QUEUES
- description: Topic names
  displayName: Topics
  name: HORNETQ_TOPICS
- description: The name of the secret containing the keystore file
  displayName: Server Keystore Secret Name
  name: HTTPS_SECRET
  required: true
  value: decisionserver-app-secret
- description: The name of the keystore file within the secret
  displayName: Server Keystore Filename
  name: HTTPS_KEYSTORE
  value: keystore.jks
- description: The name associated with the server certificate
  displayName: Server Certificate Name
  name: HTTPS_NAME
  value: jboss
- description: The password for the keystore and certificate
  displayName: Server Keystore Password
  name: HTTPS_PASSWORD
  value: mykeystorepass
- description: HornetQ cluster admin password
  displayName: HornetQ Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: HORNETQ_CLUSTER_PASSWORD
  required: true
- description: GitHub trigger secret
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: Maven mirror to use for S2I builds
  displayName: Maven mirror URL
  name: MAVEN_MIRROR_URL
- description: List of directories from which archives will be copied into the deployment
    folder. If unspecified, all archives in /target will be copied.
  name: ARTIFACT_DIR
