apiVersion: v1
kind: Template
labels:
  template: datavirt63-secure-s2i
  xpaas: 1.4.0
message: 'A new data service has been created in your project.  The username/password
  for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please be sure
  to create the "${SERVICE_ACCOUNT_NAME}" service account and the following secrets:
  "${CONFIGURATION_NAME}" containing the datasource configuration details required
  by the deployed VDB(s); "${HTTPS_SECRET}" containing the ${HTTPS_KEYSTORE} file
  used for serving secure content; "${JGROUPS_ENCRYPT_SECRET}" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
  file used for securing JGroups communications.'
metadata:
  annotations:
    description: Application template for JBoss Data Virtualization 6.3 services built
      using S2I.  Includes ability to configure certificates for serving secure content.
    iconClass: icon-jboss
    openshift.io/display-name: Red Hat JBoss Data Virtualization 6.3 (with SSL)
    tags: jdv,datavirt,jboss,xpaas
    version: 1.4.0
  creationTimestamp: 2017-12-27T03:03:28Z
  name: datavirt63-secure-s2i
  namespace: openshift
  resourceVersion: "984"
  selfLink: /oapi/v1/namespaces/openshift/templates/datavirt63-secure-s2i
  uid: 8359553a-eab2-11e7-8531-0050569c0b78
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The data virtualization services.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: http
    - name: https
      port: 8443
      targetPort: https
    - name: jdbc
      port: 31000
      targetPort: jdbc
    - name: jdbcs
      port: 31443
      targetPort: jdbcs
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http (REST) service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    port:
      targetPort: http
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-https
  kind: Route
  metadata:
    annotations:
      description: Route for application's https (REST) service.
    labels:
      application: ${APPLICATION_NAME}
    name: secure-${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTPS}
    port:
      targetPort: https
    tls:
      termination: passthrough
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-jdbc
  kind: Route
  metadata:
    annotations:
      description: Route for application's JDBC service.
    labels:
      application: ${APPLICATION_NAME}
    name: jdbc-${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_JDBC}
    port:
      targetPort: jdbcs
    tls:
      termination: passthrough
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      images:
      - from:
          kind: ImageStreamTag
          name: jboss-datagrid65-client-openshift:1.0
          namespace: ${IMAGE_STREAM_NAMESPACE}
        paths:
        - destinationDir: ./${CONTEXT_DIR}/extensions/datagrid65
          sourcePath: /extensions/.
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        - name: CUSTOM_INSTALL_DIRECTORIES
          value: extensions/*
        - name: VDB_DIRS
          value: ${VDB_DIRS}
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-datavirt63-openshift:1.2
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - imageChange:
        from:
          kind: ImageStreamTag
          name: jboss-datagrid65-client-openshift:1.0
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: application=${APPLICATION_NAME}
          - name: OPENSHIFT_KUBE_PING_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: HTTPS_KEYSTORE_DIR
            value: /etc/datavirt-secret-volume
          - name: HTTPS_KEYSTORE
            value: ${HTTPS_KEYSTORE}
          - name: HTTPS_KEYSTORE_TYPE
            value: ${HTTPS_KEYSTORE_TYPE}
          - name: HTTPS_NAME
            value: ${HTTPS_NAME}
          - name: HTTPS_PASSWORD
            value: ${HTTPS_PASSWORD}
          - name: JGROUPS_ENCRYPT_SECRET
            value: ${JGROUPS_ENCRYPT_SECRET}
          - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
            value: /etc/jgroups-encrypt-secret-volume
          - name: JGROUPS_ENCRYPT_KEYSTORE
            value: ${JGROUPS_ENCRYPT_KEYSTORE}
          - name: JGROUPS_ENCRYPT_NAME
            value: ${JGROUPS_ENCRYPT_NAME}
          - name: JGROUPS_ENCRYPT_PASSWORD
            value: ${JGROUPS_ENCRYPT_PASSWORD}
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: AUTO_DEPLOY_EXPLODED
            value: ${AUTO_DEPLOY_EXPLODED}
          - name: TEIID_USERNAME
            value: ${TEIID_USERNAME}
          - name: TEIID_PASSWORD
            value: ${TEIID_PASSWORD}
          - name: MODESHAPE_USERNAME
            value: ${MODESHAPE_USERNAME}
          - name: MODESHAPE_PASSWORD
            value: ${MODESHAPE_PASSWORD}
          - name: ENV_FILES
            value: /etc/datavirt-environment/*
          - name: DATAVIRT_TRANSPORT_KEYSTORE
            value: ${HTTPS_KEYSTORE}
          - name: DATAVIRT_TRANSPORT_KEYSTORE_TYPE
            value: ${HTTPS_KEYSTORE_TYPE}
          - name: DATAVIRT_TRANSPORT_KEY_ALIAS
            value: ${HTTPS_NAME}
          - name: DATAVIRT_TRANSPORT_KEYSTORE_PASSWORD
            value: ${HTTPS_PASSWORD}
          - name: SSO_URL
            value: ${SSO_URL}
          - name: SSO_SERVICE_URL
            value: ${SSO_SERVICE_URL}
          - name: SSO_REALM
            value: ${SSO_REALM}
          - name: SSO_USERNAME
            value: ${SSO_USERNAME}
          - name: SSO_PASSWORD
            value: ${SSO_PASSWORD}
          - name: SSO_PUBLIC_KEY
            value: ${SSO_PUBLIC_KEY}
          - name: SSO_BEARER_ONLY
            value: ${SSO_BEARER_ONLY}
          - name: SSO_SAML_KEYSTORE_SECRET
            value: ${SSO_SAML_KEYSTORE_SECRET}
          - name: SSO_SAML_KEYSTORE
            value: ${SSO_SAML_KEYSTORE}
          - name: SSO_SAML_KEYSTORE_DIR
            value: /etc/sso-saml-secret-volume
          - name: SSO_SAML_CERTIFICATE_NAME
            value: ${SSO_SAML_CERTIFICATE_NAME}
          - name: SSO_SAML_KEYSTORE_PASSWORD
            value: ${SSO_SAML_KEYSTORE_PASSWORD}
          - name: SSO_SECRET
            value: ${SSO_SECRET}
          - name: SSO_ENABLE_CORS
            value: ${SSO_ENABLE_CORS}
          - name: SSO_SAML_LOGOUT_PAGE
            value: ${SSO_SAML_LOGOUT_PAGE}
          - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
            value: ${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}
          - name: SSO_TRUSTSTORE
            value: ${SSO_TRUSTSTORE}
          - name: SSO_TRUSTSTORE_DIR
            value: /etc/sso-secret-volume
          - name: SSO_TRUSTSTORE_PASSWORD
            value: ${SSO_TRUSTSTORE_PASSWORD}
          - name: SSO_OPENIDCONNECT_DEPLOYMENTS
            value: ${SSO_OPENIDCONNECT_DEPLOYMENTS}
          - name: SSO_SAML_DEPLOYMENTS
            value: ${SSO_SAML_DEPLOYMENTS}
          - name: HOSTNAME_HTTP
            value: ${HOSTNAME_HTTP}
          - name: HOSTNAME_HTTPS
            value: ${HOSTNAME_HTTPS}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 31000
            name: jdbc
            protocol: TCP
          - containerPort: 31443
            name: jdbcs
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
          volumeMounts:
          - mountPath: /etc/datavirt-environment
            name: configuration
            readOnly: true
          - mountPath: /etc/datavirt-secret-volume
            name: datavirt-keystore-volume
            readOnly: true
          - mountPath: /etc/jgroups-encrypt-secret-volume
            name: datavirt-jgroups-keystore-volume
            readOnly: true
        serviceAccountName: ${SERVICE_ACCOUNT_NAME}
        terminationGracePeriodSeconds: 60
        volumes:
        - name: configuration
          secret:
            secretName: ${CONFIGURATION_NAME}
        - name: datavirt-keystore-volume
          secret:
            secretName: ${HTTPS_SECRET}
        - name: datavirt-jgroups-keystore-volume
          secret:
            secretName: ${JGROUPS_ENCRYPT_SECRET}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: datavirt-app
- description: The name of the secret containing configuration properties for the
    data sources.
  displayName: Configuration Secret Name
  name: CONFIGURATION_NAME
  required: true
  value: datavirt-app-config
- description: 'Specify a custom hostname for the http route.  Leave blank to use
    default hostname, e.g.: <service-name>-<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname
  name: HOSTNAME_HTTP
- description: 'Specify a custom hostname for the https route.  Leave blank to use
    default hostname, e.g.: secure-<service-name>-<project>.<default-domain-suffix>'
  displayName: Custom https Route Hostname
  name: HOSTNAME_HTTPS
- description: 'Specify a custom hostname for the JDBC route.  Leave blank to use
    default hostname, e.g.: secure-<service-name>-<project>.<default-domain-suffix>'
  displayName: Custom JDBC Route Hostname
  name: HOSTNAME_JDBC
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/jboss-openshift/openshift-quickstarts
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: SOURCE_REPOSITORY_REF
  value: master
- description: Set this to the relative path to your project if it is not in the root
    of your repository.
  displayName: Context Directory
  name: CONTEXT_DIR
  value: datavirt/dynamicvdb-datafederation/app
- description: The name of the service account to use for the deployment.  The service
    account should be configured to allow usage of the secret(s) specified by CONFIGURATION_NAME,
    HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.
  displayName: Service Account Name
  name: SERVICE_ACCOUNT_NAME
  required: true
  value: datavirt-service-account
- description: The name of the secret containing the keystore to be used for serving
    secure content.
  displayName: Server Keystore Secret Name
  name: HTTPS_SECRET
  required: true
  value: datavirt-app-secret
- description: The name of the keystore file within the secret.
  displayName: Server Keystore Filename
  name: HTTPS_KEYSTORE
  value: keystore.jks
- description: The type of the keystore file (JKS or JCEKS).
  displayName: Server Keystore Type
  name: HTTPS_KEYSTORE_TYPE
- description: The name associated with the server certificate.
  displayName: Server Certificate Name
  name: HTTPS_NAME
  value: jboss
- description: The password for the keystore and certificate
  displayName: Server Keystore Password
  name: HTTPS_PASSWORD
  value: mykeystorepass
- description: Username associated with Teiid data service.
  displayName: Teiid Username
  from: '[\a]{8}'
  generate: expression
  name: TEIID_USERNAME
  required: true
- description: Password for Teiid user.
  displayName: Teiid User Password
  from: '[\a\A]{8}[\d]{1}[\A]{1}'
  generate: expression
  name: TEIID_PASSWORD
  required: true
- description: Username associated with ModeShape.
  displayName: ModeShape Username
  from: '[\a]{8}'
  generate: expression
  name: MODESHAPE_USERNAME
  required: true
- description: Password for ModeShape user.
  displayName: ModeShape User Password
  from: '[\a\A]{8}[\d]{1}[\A]{1}'
  generate: expression
  name: MODESHAPE_PASSWORD
  required: true
- description: A secret string used to configure the GitHub webhook.
  displayName: Github Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: A secret string used to configure the Generic webhook.
  displayName: Generic Webhook Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: The name of the secret containing the keystore to be used for securing
    JGroups communications.
  displayName: JGroups Secret Name
  name: JGROUPS_ENCRYPT_SECRET
  value: datavirt-app-secret
- description: The name of the keystore file within the JGroups secret.
  displayName: JGroups Keystore Filename
  name: JGROUPS_ENCRYPT_KEYSTORE
  value: jgroups.jceks
- description: The name associated with the JGroups server certificate
  displayName: JGroups Certificate Name
  name: JGROUPS_ENCRYPT_NAME
  value: secret-key
- description: The password for the keystore and certificate
  displayName: JGroups Keystore Password
  name: JGROUPS_ENCRYPT_PASSWORD
  value: password
- description: Password used by JGroups to authenticate nodes in the cluster.
  displayName: JGroups Cluster Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JGROUPS_CLUSTER_PASSWORD
  required: true
- description: Controls whether exploded deployment content should be automatically
    deployed
  displayName: Deploy Exploded Archives
  name: AUTO_DEPLOY_EXPLODED
  value: "false"
- description: Comma delimited list of source directories containing VDBs for deployment
  displayName: VDB Deployment Directories
  name: VDB_DIRS
- description: The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
    is the URL through which the user will be redirected when a login or token is
    required by the application.
  displayName: SSO Server URL
  name: SSO_URL
- description: The URL for the interal SSO service, where secure-sso is the kubernetes
    service exposed by the SSO server.  This is used to create the application client(s)
    (see SSO_USERNAME).  This can also be the same as SSO_URL.
  displayName: SSO Server Service URL
  name: SSO_SERVICE_URL
- description: The SSO realm to which the application client(s) should be associated
    (e.g. demo).
  displayName: SSO Realm
  name: SSO_REALM
- description: The username used to access the SSO service.  This is used to create
    the appliction client(s) within the specified SSO realm. This should match the
    SSO_SERVICE_USERNAME specified through one of the sso70-* templates.
  displayName: SSO Username
  name: SSO_USERNAME
- description: The password for the SSO service user.
  displayName: SSO User's Password
  name: SSO_PASSWORD
- description: SSO Realm Public Key. Public key is recommended to be passed into the
    template to avoid man-in-the-middle security vulnerability.  This can be retrieved
    from the SSO server, for the specified realm.
  displayName: SSO Realm Public Key
  name: SSO_PUBLIC_KEY
- description: SSO Client Access Type. true or false
  displayName: SSO Bearer Only
  name: SSO_BEARER_ONLY
- description: The name of the secret containing the keystore file
  displayName: SSO SAML Keystore Secret
  name: SSO_SAML_KEYSTORE_SECRET
  value: datavirt-app-secret
- description: The name of the keystore file within the secret
  displayName: SSO SAML Keystore File
  name: SSO_SAML_KEYSTORE
  value: keystore.jks
- description: The name associated with the server certificate
  displayName: SSO SAML Certificate Alias
  name: SSO_SAML_CERTIFICATE_NAME
- description: The password for the keystore and certificate
  displayName: SSO SAML Keystore Password
  name: SSO_SAML_KEYSTORE_PASSWORD
- description: The SSO Client Secret for Confidential Access
  displayName: SSO Client Secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: SSO_SECRET
- description: Enable CORS for SSO applications. true or false
  displayName: SSO Enable CORS
  name: SSO_ENABLE_CORS
  value: "false"
- description: SSO logout page for SAML applications
  displayName: SSO SAML Logout Page
  name: SSO_SAML_LOGOUT_PAGE
  value: /
- description: If true SSL communication between EAP and the SSO Server will be insecure
    (i.e. certificate validation is disabled with curl)
  displayName: SSO Disable SSL Certificate Validation
  name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
  value: "true"
- description: The name of the truststore file within the secret (e.g. truststore.jks)
  displayName: SSO Truststore File
  name: SSO_TRUSTSTORE
- description: The password for the truststore and certificate (e.g. mykeystorepass)
  displayName: SSO Truststore Password
  name: SSO_TRUSTSTORE_PASSWORD
- description: The name of the secret containing the truststore file (e.g. truststore-secret).
    Used for volume secretName
  displayName: SSO Truststore Secret
  name: SSO_TRUSTSTORE_SECRET
  value: datavirt-app-secret
- description: Comma delimited list of deployments that shoulds be exploded and enabled
    for SSO OpenIDConnect via auth-method
  displayName: SSO OpenIDConnect Deployments
  name: SSO_OPENIDCONNECT_DEPLOYMENTS
- description: Comma delimited list of deployments that shoulds be exploded and enabled
    for SSO SAML via auth-method
  displayName: SSO SAML Deployments
  name: SSO_SAML_DEPLOYMENTS
- description: Maven mirror to use for S2I builds
  displayName: Maven mirror URL
  name: MAVEN_MIRROR_URL
- description: List of directories from which archives will be copied into the deployment
    folder. If unspecified, all archives in /target will be copied.
  displayName: Artifact Directories
  name: ARTIFACT_DIR
