/**
 * Copyright (2018, ) Institute of Software, Chinese Academy of Sciences
 */
package com.github.isdream.chameleon.vm.aliyun;

import java.util.Set;

import com.github.isdream.chameleon.FeaturesUtils;

import junit.framework.Assert;
import junit.framework.TestCase;

/**
 * @author wuheng@otcaix.iscas.ac.cn
 *
 * 2018年2月19日
 */
public class AliyunECSKindsAnalyzerTest extends TestCase {

	Set<String> kinds = null;
	
	@Override
	protected void setUp() throws Exception {
		kinds = new AliyunECSKindsAnalyzer().getKinds();
	}

	public void testFeaturesWithTrueResults() {
		Assert.assertEquals(kinds.contains("ModifySnapshotAttribute"), true);
		Assert.assertEquals(kinds.contains("JoinSecurityGroup"), true);
		Assert.assertEquals(kinds.contains("DescribeSnapshots"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceVncPasswd"), true);
		Assert.assertEquals(kinds.contains("ModifyBandwidthPackageSpec"), true);
		Assert.assertEquals(kinds.contains("AttachDisk"), true);
		Assert.assertEquals(kinds.contains("CreateNatGateway"), true);
		Assert.assertEquals(kinds.contains("CreateHaVip"), true);
		Assert.assertEquals(kinds.contains("ReInitDisk"), true);
		Assert.assertEquals(kinds.contains("ModifyAutoSnapshotPolicy"), true);
		Assert.assertEquals(kinds.contains("AssociateEipAddress"), true);
		Assert.assertEquals(kinds.contains("DescribeEipAddresses"), true);
		Assert.assertEquals(kinds.contains("RevokeSecurityGroupEgress"), true);
		Assert.assertEquals(kinds.contains("ActivateRouterInterface"), true);
		Assert.assertEquals(kinds.contains("DescribeSpotPriceHistory"), true);
		Assert.assertEquals(kinds.contains("TerminateVirtualBorderRouter"), true);
		Assert.assertEquals(kinds.contains("StopInstance"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceHistoryEvents"), true);
		Assert.assertEquals(kinds.contains("DeletePhysicalConnection"), true);
		Assert.assertEquals(kinds.contains("RevokeSecurityGroup"), true);
		Assert.assertEquals(kinds.contains("CheckAutoSnapshotPolicy"), true);
		Assert.assertEquals(kinds.contains("DescribeTaskAttribute"), true);
		Assert.assertEquals(kinds.contains("CreateAutoSnapshotPolicy"), true);
		Assert.assertEquals(kinds.contains("ReActivateInstances"), true);
		Assert.assertEquals(kinds.contains("DescribeForwardTableEntries"), true);
		Assert.assertEquals(kinds.contains("DescribeInstances"), true);
		Assert.assertEquals(kinds.contains("DescribeSecurityGroupReferences"), true);
		Assert.assertEquals(kinds.contains("DeleteRouterInterface"), true);
		Assert.assertEquals(kinds.contains("DetachInstanceRamRole"), true);
		Assert.assertEquals(kinds.contains("AllocatePublicIpAddress"), true);
		Assert.assertEquals(kinds.contains("DescribeEipMonitorData"), true);
		Assert.assertEquals(kinds.contains("DescribeDisksFullStatus"), true);
		Assert.assertEquals(kinds.contains("CancelAutoSnapshotPolicy"), true);
		Assert.assertEquals(kinds.contains("DeleteNetworkInterface"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceSpec"), true);
		Assert.assertEquals(kinds.contains("DeleteSnapshot"), true);
		Assert.assertEquals(kinds.contains("DeleteKeyPairs"), true);
		Assert.assertEquals(kinds.contains("AuthorizeSecurityGroup"), true);
		Assert.assertEquals(kinds.contains("DeleteSecurityGroup"), true);
		Assert.assertEquals(kinds.contains("DescribeSnapshotMonitorData"), true);
		Assert.assertEquals(kinds.contains("ConnectRouterInterface"), true);
		Assert.assertEquals(kinds.contains("AddIpRange"), true);
		Assert.assertEquals(kinds.contains("CancelTask"), true);
		Assert.assertEquals(kinds.contains("ModifyCommand"), true);
		Assert.assertEquals(kinds.contains("ModifyPhysicalConnectionAttribute"), true);
		Assert.assertEquals(kinds.contains("ModifyVSwitchAttribute"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceAttribute"), true);
		Assert.assertEquals(kinds.contains("DeleteHaVip"), true);
		Assert.assertEquals(kinds.contains("DescribeSecurityGroups"), true);
		Assert.assertEquals(kinds.contains("ResizeDisk"), true);
		Assert.assertEquals(kinds.contains("CreateRouteEntry"), true);
		Assert.assertEquals(kinds.contains("AttachKeyPair"), true);
		Assert.assertEquals(kinds.contains("DescribeInvocations"), true);
		Assert.assertEquals(kinds.contains("CreateRouterInterface"), true);
		Assert.assertEquals(kinds.contains("CheckDiskEnableAutoSnapshotValidation"), true);
		Assert.assertEquals(kinds.contains("RunInstances"), true);
		Assert.assertEquals(kinds.contains("StopInvocation"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceNetworkSpec"), true);
		Assert.assertEquals(kinds.contains("ModifyDiskAttribute"), true);
		Assert.assertEquals(kinds.contains("CreateVSwitch"), true);
		Assert.assertEquals(kinds.contains("ModifyEipAddressAttribute"), true);
		Assert.assertEquals(kinds.contains("DescribeBandwidthLimitation"), true);
		Assert.assertEquals(kinds.contains("RemoveTags"), true);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupAttribute"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceAutoReleaseTime"), true);
		Assert.assertEquals(kinds.contains("DeleteNatGateway"), true);
		Assert.assertEquals(kinds.contains("DescribeZones"), true);
		Assert.assertEquals(kinds.contains("DeactivateRouterInterface"), true);
		Assert.assertEquals(kinds.contains("DescribeAvailableResource"), true);
		Assert.assertEquals(kinds.contains("DescribeAccessPoints"), true);
		Assert.assertEquals(kinds.contains("CreateCommand"), true);
		Assert.assertEquals(kinds.contains("DescribeInstancesFullStatus"), true);
		Assert.assertEquals(kinds.contains("ReleaseEipAddress"), true);
		Assert.assertEquals(kinds.contains("DetachClassicLinkVpc"), true);
		Assert.assertEquals(kinds.contains("DescribeVSwitches"), true);
		Assert.assertEquals(kinds.contains("ExportImage"), true);
		Assert.assertEquals(kinds.contains("ModifyRouterInterfaceSpec"), true);
		Assert.assertEquals(kinds.contains("DescribeVpcs"), true);
		Assert.assertEquals(kinds.contains("DescribeDiskMonitorData"), true);
		Assert.assertEquals(kinds.contains("ModifyDeploymentSetAttribute"), true);
		Assert.assertEquals(kinds.contains("ModifyRouterInterfaceAttribute"), true);
		Assert.assertEquals(kinds.contains("DescribeVirtualBorderRoutersForPhysicalConnection"), true);
		Assert.assertEquals(kinds.contains("StartInstance"), true);
		Assert.assertEquals(kinds.contains("CreateDisk"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceTypes"), true);
		Assert.assertEquals(kinds.contains("DescribeSnapshotPackage"), true);
		Assert.assertEquals(kinds.contains("RebootInstance"), true);
		Assert.assertEquals(kinds.contains("BindIpRange"), true);
		Assert.assertEquals(kinds.contains("InvokeCommand"), true);
		Assert.assertEquals(kinds.contains("ModifyUserBusinessBehavior"), true);
		Assert.assertEquals(kinds.contains("DeleteForwardEntry"), true);
		Assert.assertEquals(kinds.contains("DescribeHpcClusters"), true);
		Assert.assertEquals(kinds.contains("CancelAgreement"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceChargeType"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceAutoRenewAttribute"), true);
		Assert.assertEquals(kinds.contains("DescribeVirtualBorderRouters"), true);
		Assert.assertEquals(kinds.contains("ModifyHpcClusterAttribute"), true);
		Assert.assertEquals(kinds.contains("DescribePrice"), true);
		Assert.assertEquals(kinds.contains("DescribeLimitation"), true);
		Assert.assertEquals(kinds.contains("DeleteDeploymentSet"), true);
		Assert.assertEquals(kinds.contains("DescribeDeploymentSetTopology"), true);
		Assert.assertEquals(kinds.contains("ModifyInstanceVpcAttribute"), true);
		Assert.assertEquals(kinds.contains("AddTags"), true);
		Assert.assertEquals(kinds.contains("CreateHpcCluster"), true);
		Assert.assertEquals(kinds.contains("DescribeUserBusinessBehavior"), true);
		Assert.assertEquals(kinds.contains("DescribeCommands"), true);
		Assert.assertEquals(kinds.contains("DeleteImage"), true);
		Assert.assertEquals(kinds.contains("DescribeDisks"), true);
		Assert.assertEquals(kinds.contains("DeleteVpc"), true);
		Assert.assertEquals(kinds.contains("DescribeImageSupportInstanceTypes"), true);
		Assert.assertEquals(kinds.contains("DeleteCommand"), true);
		Assert.assertEquals(kinds.contains("ReplaceSystemDisk"), true);
		Assert.assertEquals(kinds.contains("DeleteVSwitch"), true);
		Assert.assertEquals(kinds.contains("ModifyImageShareGroupPermission"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceVncUrl"), true);
		Assert.assertEquals(kinds.contains("RecoverVirtualBorderRouter"), true);
		Assert.assertEquals(kinds.contains("DescribeResourceByTags"), true);
		Assert.assertEquals(kinds.contains("DescribeClusters"), true);
		Assert.assertEquals(kinds.contains("DescribeTags"), true);
		Assert.assertEquals(kinds.contains("DeleteBandwidthPackage"), true);
		Assert.assertEquals(kinds.contains("DescribeImages"), true);
		Assert.assertEquals(kinds.contains("AuthorizeSecurityGroupEgress"), true);
		Assert.assertEquals(kinds.contains("SignAgreement"), true);
		Assert.assertEquals(kinds.contains("ImportImage"), true);
		Assert.assertEquals(kinds.contains("ModifyForwardEntry"), true);
		Assert.assertEquals(kinds.contains("RenewInstance"), true);
		Assert.assertEquals(kinds.contains("CopyImage"), true);
		Assert.assertEquals(kinds.contains("CreateVpc"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceMonitorData"), true);
		Assert.assertEquals(kinds.contains("UnassociateEipAddress"), true);
		Assert.assertEquals(kinds.contains("CreateSnapshot"), true);
		Assert.assertEquals(kinds.contains("ModifyVirtualBorderRouterAttribute"), true);
		Assert.assertEquals(kinds.contains("DetachKeyPair"), true);
		Assert.assertEquals(kinds.contains("DescribeTasks"), true);
		Assert.assertEquals(kinds.contains("DescribeRenewalPrice"), true);
		Assert.assertEquals(kinds.contains("LeaveSecurityGroup"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceVncPasswd"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceAutoRenewAttribute"), true);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupRule"), true);
		Assert.assertEquals(kinds.contains("DescribeResourcesModification"), true);
		Assert.assertEquals(kinds.contains("ImportKeyPair"), true);
		Assert.assertEquals(kinds.contains("DescribeNewProjectEipMonitorData"), true);
		Assert.assertEquals(kinds.contains("UnbindIpRange"), true);
		Assert.assertEquals(kinds.contains("DeleteRecycleBin"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceRamRole"), true);
		Assert.assertEquals(kinds.contains("CreateImage"), true);
		Assert.assertEquals(kinds.contains("DescribeHaVips"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceAttribute"), true);
		Assert.assertEquals(kinds.contains("DetachDisk"), true);
		Assert.assertEquals(kinds.contains("ModifyImageAttribute"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceStatus"), true);
		Assert.assertEquals(kinds.contains("AddBandwidthPackageIps"), true);
		Assert.assertEquals(kinds.contains("DescribeNatGateways"), true);
		Assert.assertEquals(kinds.contains("DeleteHpcCluster"), true);
		Assert.assertEquals(kinds.contains("ResetDisk"), true);
		Assert.assertEquals(kinds.contains("ModifyDiskChargeType"), true);
		Assert.assertEquals(kinds.contains("ModifyIntranetBandwidthKb"), true);
		Assert.assertEquals(kinds.contains("DescribeBandwidthPackages"), true);
		Assert.assertEquals(kinds.contains("ApplyAutoSnapshotPolicy"), true);
		Assert.assertEquals(kinds.contains("CreateSecurityGroup"), true);
		Assert.assertEquals(kinds.contains("DescribeSnapshotLinks"), true);
		Assert.assertEquals(kinds.contains("DescribeInvocationResults"), true);
		Assert.assertEquals(kinds.contains("DescribeRecommendInstanceType"), true);
		Assert.assertEquals(kinds.contains("DescribeTagKeys"), true);
		Assert.assertEquals(kinds.contains("DeleteInstance"), true);
		Assert.assertEquals(kinds.contains("RemoveBandwidthPackageIps"), true);
		Assert.assertEquals(kinds.contains("DescribeIntranetAttributeKb"), true);
		Assert.assertEquals(kinds.contains("ModifyVpcAttribute"), true);
		Assert.assertEquals(kinds.contains("DescribeSnapshotsUsage"), true);
		Assert.assertEquals(kinds.contains("CreateInstance"), true);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupEgressRule"), true);
		Assert.assertEquals(kinds.contains("DeleteAutoSnapshotPolicy"), true);
		Assert.assertEquals(kinds.contains("EnablePhysicalConnection"), true);
		Assert.assertEquals(kinds.contains("DescribeInstanceTypeFamilies"), true);
		Assert.assertEquals(kinds.contains("DescribeRouterInterfaces"), true);
		Assert.assertEquals(kinds.contains("CreateForwardEntry"), true);
		Assert.assertEquals(kinds.contains("EipNotifyPaid"), true);
		Assert.assertEquals(kinds.contains("ReleasePublicIpAddress"), true);
		Assert.assertEquals(kinds.contains("CreateVirtualBorderRouter"), true);
		Assert.assertEquals(kinds.contains("EipFillParams"), true);
		Assert.assertEquals(kinds.contains("ModifyPrepayInstanceSpec"), true);
		Assert.assertEquals(kinds.contains("EipFillProduct"), true);
		Assert.assertEquals(kinds.contains("DescribeRouteTables"), true);
		Assert.assertEquals(kinds.contains("DescribeUserData"), true);
		Assert.assertEquals(kinds.contains("JoinResourceGroup"), true);
		Assert.assertEquals(kinds.contains("ModifyAutoSnapshotPolicyEx"), true);
		Assert.assertEquals(kinds.contains("CreatePhysicalConnection"), true);
		Assert.assertEquals(kinds.contains("DescribeKeyPairs"), true);
		Assert.assertEquals(kinds.contains("AssociateHaVip"), true);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupPolicy"), true);
		Assert.assertEquals(kinds.contains("ConvertNatPublicIpToEip"), true);
		Assert.assertEquals(kinds.contains("DeleteRouteEntry"), true);
		Assert.assertEquals(kinds.contains("DeleteVirtualBorderRouter"), true);
		Assert.assertEquals(kinds.contains("DescribeInstancePhysicalAttribute"), true);
		Assert.assertEquals(kinds.contains("TerminatePhysicalConnection"), true);
		Assert.assertEquals(kinds.contains("AttachNetworkInterface"), true);
		Assert.assertEquals(kinds.contains("ModifyImageSharePermission"), true);
		Assert.assertEquals(kinds.contains("DescribeSecurityGroupAttribute"), true);
		Assert.assertEquals(kinds.contains("DescribeAutoSnapshotPolicyEx"), true);
		Assert.assertEquals(kinds.contains("DescribeImageSharePermission"), true);
		Assert.assertEquals(kinds.contains("CancelCopyImage"), true);
		Assert.assertEquals(kinds.contains("CreateDeploymentSet"), true);
		Assert.assertEquals(kinds.contains("DescribeRegions"), true);
		Assert.assertEquals(kinds.contains("DescribeClassicLinkInstances"), true);
		Assert.assertEquals(kinds.contains("DescribeAutoSnapshotPolicy"), true);
		Assert.assertEquals(kinds.contains("DescribePhysicalConnections"), true);
		Assert.assertEquals(kinds.contains("DescribeRecycleBin"), true);
		Assert.assertEquals(kinds.contains("CreateNetworkInterface"), true);
		Assert.assertEquals(kinds.contains("DescribeIpRanges"), true);
		Assert.assertEquals(kinds.contains("CancelPhysicalConnection"), true);
		Assert.assertEquals(kinds.contains("DescribeVRouters"), true);
		Assert.assertEquals(kinds.contains("DescribeNetworkInterfaces"), true);
		Assert.assertEquals(kinds.contains("ModifyNetworkInterfaceAttribute"), true);
		Assert.assertEquals(kinds.contains("DetachNetworkInterface"), true);
		Assert.assertEquals(kinds.contains("AllocateEipAddress"), true);
		Assert.assertEquals(kinds.contains("DeleteDisk"), true);
		Assert.assertEquals(kinds.contains("UnassociateHaVip"), true);
		Assert.assertEquals(kinds.contains("CreateKeyPair"), true);
		Assert.assertEquals(kinds.contains("ModifyHaVipAttribute"), true);
		Assert.assertEquals(kinds.contains("AttachClassicLinkVpc"), true);
		Assert.assertEquals(kinds.contains("DescribeDeploymentSets"), true);
		Assert.assertEquals(kinds.contains("AttachInstanceRamRole"), true);
		Assert.assertEquals(kinds.contains("ModifyVRouterAttribute"), true);
	}
	
	public void testFeaturesWithFalseResults() {
		Assert.assertEquals(kinds.contains("ModifySnapshotAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("JoinSecurityGroupFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSnapshotsFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceVncPasswdFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyBandwidthPackageSpecFalse"), false);
		Assert.assertEquals(kinds.contains("AttachDiskFalse"), false);
		Assert.assertEquals(kinds.contains("CreateNatGatewayFalse"), false);
		Assert.assertEquals(kinds.contains("CreateHaVipFalse"), false);
		Assert.assertEquals(kinds.contains("ReInitDiskFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyAutoSnapshotPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("AssociateEipAddressFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeEipAddressesFalse"), false);
		Assert.assertEquals(kinds.contains("RevokeSecurityGroupEgressFalse"), false);
		Assert.assertEquals(kinds.contains("ActivateRouterInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSpotPriceHistoryFalse"), false);
		Assert.assertEquals(kinds.contains("TerminateVirtualBorderRouterFalse"), false);
		Assert.assertEquals(kinds.contains("StopInstanceFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceHistoryEventsFalse"), false);
		Assert.assertEquals(kinds.contains("DeletePhysicalConnectionFalse"), false);
		Assert.assertEquals(kinds.contains("RevokeSecurityGroupFalse"), false);
		Assert.assertEquals(kinds.contains("CheckAutoSnapshotPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeTaskAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("CreateAutoSnapshotPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("ReActivateInstancesFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeForwardTableEntriesFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstancesFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSecurityGroupReferencesFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteRouterInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("DetachInstanceRamRoleFalse"), false);
		Assert.assertEquals(kinds.contains("AllocatePublicIpAddressFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeEipMonitorDataFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeDisksFullStatusFalse"), false);
		Assert.assertEquals(kinds.contains("CancelAutoSnapshotPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteNetworkInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceSpecFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteSnapshotFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteKeyPairsFalse"), false);
		Assert.assertEquals(kinds.contains("AuthorizeSecurityGroupFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteSecurityGroupFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSnapshotMonitorDataFalse"), false);
		Assert.assertEquals(kinds.contains("ConnectRouterInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("AddIpRangeFalse"), false);
		Assert.assertEquals(kinds.contains("CancelTaskFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyCommandFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyPhysicalConnectionAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyVSwitchAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteHaVipFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSecurityGroupsFalse"), false);
		Assert.assertEquals(kinds.contains("ResizeDiskFalse"), false);
		Assert.assertEquals(kinds.contains("CreateRouteEntryFalse"), false);
		Assert.assertEquals(kinds.contains("AttachKeyPairFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInvocationsFalse"), false);
		Assert.assertEquals(kinds.contains("CreateRouterInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("CheckDiskEnableAutoSnapshotValidationFalse"), false);
		Assert.assertEquals(kinds.contains("RunInstancesFalse"), false);
		Assert.assertEquals(kinds.contains("StopInvocationFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceNetworkSpecFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyDiskAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("CreateVSwitchFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyEipAddressAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeBandwidthLimitationFalse"), false);
		Assert.assertEquals(kinds.contains("RemoveTagsFalse"), false);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceAutoReleaseTimeFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteNatGatewayFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeZonesFalse"), false);
		Assert.assertEquals(kinds.contains("DeactivateRouterInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeAvailableResourceFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeAccessPointsFalse"), false);
		Assert.assertEquals(kinds.contains("CreateCommandFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstancesFullStatusFalse"), false);
		Assert.assertEquals(kinds.contains("ReleaseEipAddressFalse"), false);
		Assert.assertEquals(kinds.contains("DetachClassicLinkVpcFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeVSwitchesFalse"), false);
		Assert.assertEquals(kinds.contains("ExportImageFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyRouterInterfaceSpecFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeVpcsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeDiskMonitorDataFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyDeploymentSetAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyRouterInterfaceAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeVirtualBorderRoutersForPhysicalConnectionFalse"), false);
		Assert.assertEquals(kinds.contains("StartInstanceFalse"), false);
		Assert.assertEquals(kinds.contains("CreateDiskFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceTypesFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSnapshotPackageFalse"), false);
		Assert.assertEquals(kinds.contains("RebootInstanceFalse"), false);
		Assert.assertEquals(kinds.contains("BindIpRangeFalse"), false);
		Assert.assertEquals(kinds.contains("InvokeCommandFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyUserBusinessBehaviorFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteForwardEntryFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeHpcClustersFalse"), false);
		Assert.assertEquals(kinds.contains("CancelAgreementFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceChargeTypeFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceAutoRenewAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeVirtualBorderRoutersFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyHpcClusterAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribePriceFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeLimitationFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteDeploymentSetFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeDeploymentSetTopologyFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyInstanceVpcAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("AddTagsFalse"), false);
		Assert.assertEquals(kinds.contains("CreateHpcClusterFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeUserBusinessBehaviorFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeCommandsFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteImageFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeDisksFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteVpcFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeImageSupportInstanceTypesFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteCommandFalse"), false);
		Assert.assertEquals(kinds.contains("ReplaceSystemDiskFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteVSwitchFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyImageShareGroupPermissionFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceVncUrlFalse"), false);
		Assert.assertEquals(kinds.contains("RecoverVirtualBorderRouterFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeResourceByTagsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeClustersFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeTagsFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteBandwidthPackageFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeImagesFalse"), false);
		Assert.assertEquals(kinds.contains("AuthorizeSecurityGroupEgressFalse"), false);
		Assert.assertEquals(kinds.contains("SignAgreementFalse"), false);
		Assert.assertEquals(kinds.contains("ImportImageFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyForwardEntryFalse"), false);
		Assert.assertEquals(kinds.contains("RenewInstanceFalse"), false);
		Assert.assertEquals(kinds.contains("CopyImageFalse"), false);
		Assert.assertEquals(kinds.contains("CreateVpcFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceMonitorDataFalse"), false);
		Assert.assertEquals(kinds.contains("UnassociateEipAddressFalse"), false);
		Assert.assertEquals(kinds.contains("CreateSnapshotFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyVirtualBorderRouterAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DetachKeyPairFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeTasksFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeRenewalPriceFalse"), false);
		Assert.assertEquals(kinds.contains("LeaveSecurityGroupFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceVncPasswdFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceAutoRenewAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupRuleFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeResourcesModificationFalse"), false);
		Assert.assertEquals(kinds.contains("ImportKeyPairFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeNewProjectEipMonitorDataFalse"), false);
		Assert.assertEquals(kinds.contains("UnbindIpRangeFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteRecycleBinFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceRamRoleFalse"), false);
		Assert.assertEquals(kinds.contains("CreateImageFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeHaVipsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DetachDiskFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyImageAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceStatusFalse"), false);
		Assert.assertEquals(kinds.contains("AddBandwidthPackageIpsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeNatGatewaysFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteHpcClusterFalse"), false);
		Assert.assertEquals(kinds.contains("ResetDiskFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyDiskChargeTypeFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyIntranetBandwidthKbFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeBandwidthPackagesFalse"), false);
		Assert.assertEquals(kinds.contains("ApplyAutoSnapshotPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("CreateSecurityGroupFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSnapshotLinksFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInvocationResultsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeRecommendInstanceTypeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeTagKeysFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteInstanceFalse"), false);
		Assert.assertEquals(kinds.contains("RemoveBandwidthPackageIpsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeIntranetAttributeKbFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyVpcAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSnapshotsUsageFalse"), false);
		Assert.assertEquals(kinds.contains("CreateInstanceFalse"), false);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupEgressRuleFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteAutoSnapshotPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("EnablePhysicalConnectionFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstanceTypeFamiliesFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeRouterInterfacesFalse"), false);
		Assert.assertEquals(kinds.contains("CreateForwardEntryFalse"), false);
		Assert.assertEquals(kinds.contains("EipNotifyPaidFalse"), false);
		Assert.assertEquals(kinds.contains("ReleasePublicIpAddressFalse"), false);
		Assert.assertEquals(kinds.contains("CreateVirtualBorderRouterFalse"), false);
		Assert.assertEquals(kinds.contains("EipFillParamsFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyPrepayInstanceSpecFalse"), false);
		Assert.assertEquals(kinds.contains("EipFillProductFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeRouteTablesFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeUserDataFalse"), false);
		Assert.assertEquals(kinds.contains("JoinResourceGroupFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyAutoSnapshotPolicyExFalse"), false);
		Assert.assertEquals(kinds.contains("CreatePhysicalConnectionFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeKeyPairsFalse"), false);
		Assert.assertEquals(kinds.contains("AssociateHaVipFalse"), false);
		Assert.assertEquals(kinds.contains("ModifySecurityGroupPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("ConvertNatPublicIpToEipFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteRouteEntryFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteVirtualBorderRouterFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeInstancePhysicalAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("TerminatePhysicalConnectionFalse"), false);
		Assert.assertEquals(kinds.contains("AttachNetworkInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyImageSharePermissionFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeSecurityGroupAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeAutoSnapshotPolicyExFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeImageSharePermissionFalse"), false);
		Assert.assertEquals(kinds.contains("CancelCopyImageFalse"), false);
		Assert.assertEquals(kinds.contains("CreateDeploymentSetFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeRegionsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeClassicLinkInstancesFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeAutoSnapshotPolicyFalse"), false);
		Assert.assertEquals(kinds.contains("DescribePhysicalConnectionsFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeRecycleBinFalse"), false);
		Assert.assertEquals(kinds.contains("CreateNetworkInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeIpRangesFalse"), false);
		Assert.assertEquals(kinds.contains("CancelPhysicalConnectionFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeVRoutersFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeNetworkInterfacesFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyNetworkInterfaceAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("DetachNetworkInterfaceFalse"), false);
		Assert.assertEquals(kinds.contains("AllocateEipAddressFalse"), false);
		Assert.assertEquals(kinds.contains("DeleteDiskFalse"), false);
		Assert.assertEquals(kinds.contains("UnassociateHaVipFalse"), false);
		Assert.assertEquals(kinds.contains("CreateKeyPairFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyHaVipAttributeFalse"), false);
		Assert.assertEquals(kinds.contains("AttachClassicLinkVpcFalse"), false);
		Assert.assertEquals(kinds.contains("DescribeDeploymentSetsFalse"), false);
		Assert.assertEquals(kinds.contains("AttachInstanceRamRoleFalse"), false);
		Assert.assertEquals(kinds.contains("ModifyVRouterAttributeFalse"), false);

	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		AliyunECSKindsAnalyzer ecs = new AliyunECSKindsAnalyzer();
		FeaturesUtils.showAll("Aliyun ECS", ecs.getKinds());
		FeaturesUtils.testFeaturesWithTrueResults(ecs.getKinds());
		FeaturesUtils.testFeaturesWithFalseResults(ecs.getKinds());
	}


}
